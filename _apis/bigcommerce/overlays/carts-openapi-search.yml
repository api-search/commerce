openapi: 3.0.3
info:
  title: Carts
  version: ''
tags:
  - name: Carts (Single)
  - name: Items
  - name: Redirects
  - name: Settings
  - name: Metafields
  - name: Batch metafields
paths:
  /carts:
    parameters:
      - null
    post:
      description: >-
        Creates a **Cart**. 


        **Required Fields**


        |Field|Details|

        |-|-|

        |`line_item`|Specifies a line item.| 

        |`custom_items`|Specifies a custom item. Only required if adding a
        custom item to the cart.|

        |`gift_certificates`|Specifies a gift certificate. Only required if
        adding a gift certificate to the cart.|


        **Usage Notes**


        * A **cart** `id` (UUID) is returned in the response.

        * A **cart** `id` is the same as a **checkout** `id`.

        * A cart can be created by adding an existing **catalog item** or a
        **custom item**.

        * Carts are valid for **30 days** from the **last modification** (this
        includes creating the cart or editing the cart).

        * If a product has modifiers, use the `option_selections` array to
        describe the **modifier** selection(s).

        * The format and data type of a cart’s `option_value` are defined by the
        `value_data` object of a product’s [variant option
        value](/docs/rest-catalog/product-variant-options/values), [modifier
        value](/docs/rest-catalog/product-modifiers/values), or a combination of
        both.

        * Redirect URLs can only be generated from carts that were created using
        the **REST Management API**. 

        * To get cart `redirect_urls` in the response, append the following
        query parameter to the request URL: `include=redirect_urls`. Redirect
        URLs point to either a shared checkout domain or a channel-specific
        domain, depending on the storefront configuration.

        * To restore a cart that was created by a shopper or through a
        Storefront API, first recreate the cart using the **REST Management
        API**.

        * To get cart `promotions` in the response, append the following query
        parameter to the request URL: `include=promotions.banners`.
      tags:
        - Create
        - Cart
        - Carts
      summary: Create a Cart
  /carts/{cartId}/items:
    parameters:
      - null
      - null
      - null
    post:
      description: >-
        Adds line item to the *Cart*.


        **Usage Notes**


        To add a custom item use `custom_items`. 


        Overriding a product’s `list_price` will make that item ineligible for
        V3 product level promotions.


        If a product has modifiers, omit the `variant_id` and instead use the
        `option_selections` array to describe both the **variant** and the
        **modifier** selections.


        Please note that this API endpoint is not concurrent safe, meaning
        multiple simultaneous requests could result in unexpected and
        inconsistent results.
      tags:
        - Add
        - Cart
        - Line
        - Items
        - Carts
        - Id
        - Items
      summary: Add Cart Line Items
  /carts/{cartId}/redirect_urls:
    parameters:
      - null
      - null
      - null
    post:
      description: >-
        Creates a **Cart** redirect URL for redirecting a shopper to an already
        created cart using the `cartId`.


        **Usage Notes**


        * Redirect URLs can also be created with **Create a Cart** requests by
        appending `include=redirect_urls`.

        * A **Carts** redirect URL may only be used once.

        * Redirect URLs point to either a shared checkout domain or a
        channel-specific domain, depending on the storefront configuration.

        * Once a redirect URL has been visited, it will be invalidated and
        cannot be used again. 

        * If your application requires URLs to be visited more than once,
        consider generating a fresh one each time you need to restore a cart,
        and redirecting to the URL from your own application.

        * Redirect URLs can be generated only from carts that were created using
        the **REST Management API**. 

        * To restore a cart that was created on the storefront, either by a
        shopper or a Storefront API, first recreate the cart using the **REST
        Management API**.

        * When redirecting the shopper, you can add a set of `query_params` to
        the URL. The `query_params` feature allows passing additional
        information to the redirect URL.
      tags:
        - Create
        - Cart
        - Redirect
        - Carts
        - Id
        - Items
        - Redirect_urls
      summary: Create Cart Redirect URL
  /carts/{cartId}/items/{itemId}:
    parameters:
      - null
      - null
      - null
    put:
      description: >-
        Updates an existing, single line item in the *Cart*. 


        **Notes**


        Currently, only updating `list_price` and `quantity` are supported.
        Updating a product’s `list_price` will make that item ineligible for V3
        product-level promotions. 


        If the product has modifiers, omit the `variant_id` and instead use the
        `option_selections` array to describe both the **variant** and the
        **modifier** selections.


        If a variant needs to be changed or updated, the product will need to be
        removed and re-added to the cart with the correct variants using the
        **Add Cart Line Items** endpoint.


        `custom_items` cannot be updated via the API at this time. To update
        your cart, add a new updated custom item and delete the outdated one. If
        your cart contains only one line item, perform the add operation before
        the delete operation.


        Deleting all line items from the cart will invalidate the cart. 


        Please note that this API endpoint is not concurrent safe, meaning
        multiple simultaneous requests could result in unexpected and
        inconsistent results.
      tags:
        - Update
        - Cart
        - Line
        - Item
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
      summary: Update Cart Line Item
    delete:
      description: |-
        Deletes a *Cart* line item. 

        **Notes**

        Removing the last `line_item` in the *Cart* deletes the *Cart*.
      tags:
        - Delete
        - Cart
        - Line
        - Item
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
      summary: Delete Cart Line Item
  /carts/{cartId}:
    parameters:
      - null
      - null
    get:
      description: Returns a storeʼs *Cart*.
      tags:
        - Get
        - Cart
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
      summary: Get a Cart
    put:
      description: >-
        Updates a *Cartʼs* `customer_id`.


        **Notes**


        Changing the *Cart* `customer_id` will remove any promotions or shipping
        calculations on the *Cart*. These are tied to the customer depending on
        cart conditions and any customer groups. 
      tags:
        - Update
        - Customer
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
      summary: Update Customer ID
    delete:
      description: Deletes a *Cart*. Once a *Cart* has been deleted it can’t be recovered.
      tags:
        - Delete
        - Cart
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
      summary: Delete a Cart
  /carts/settings:
    parameters:
      - null
    get:
      summary: Get Global Cart Settings
      description: Returns the global cart settings of a store.
      tags:
        - Get
        - Global
        - Cart
        - Settings
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
    put:
      summary: Update Global Cart Settings
      description: Update the global cart settings of a store.
      tags:
        - Update
        - Global
        - Cart
        - Settings
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
  /carts/settings/channels/{channel_id}:
    parameters:
      - null
      - null
    get:
      summary: Get Channel Cart Settings
      description: Returns the per-channel overrides for the cart settings of a store.
      tags:
        - Get
        - Channel
        - Cart
        - Settings
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
    put:
      summary: Update Channel Cart Settings
      description: Update the per-channel overrides for the cart settings of a store.
      tags:
        - Update
        - Channel
        - Cart
        - Settings
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
  /carts/{cart_id}/metafields:
    parameters:
      - null
      - null
    get:
      summary: Get Cart Metafields
      tags:
        - Get
        - Cart
        - Metafields
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
      description: Get a cart's metafields.
    post:
      summary: Create a Cart Metafield
      tags:
        - Create
        - Cart
        - Metafield
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
      description: >
        Create a cart `Metafield`. 


        If you create an order from a Cart, you can continue referencing the
        Cart Metafields even if you delete the original Cart. Use the `cart_id`
        field on the Order to construct the Cart Metafield endpoint. 
  /carts/{cart_id}/metafields/{metafield_id}:
    get:
      summary: Get a Cart Metafield
      tags:
        - Get
        - Cart
        - Metafield
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
        - Metafield_id
      description: Gets a cart metafield.
    put:
      summary: Update a Cart Metafield
      tags:
        - Update
        - Cart
        - Metafield
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
        - Metafield_id
      description: |
        Update a `Metafield`, by `cart_id`.
    delete:
      summary: Delete a Metafield
      tags:
        - Delete
        - Metafield
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
        - Metafield_id
      description: |
        Deletes a `Metafield`.
    parameters:
      - null
      - null
      - null
  /carts/metafields:
    get:
      summary: Get All Cart Metafields
      tags:
        - Get
        - All
        - Cart
        - Metafields
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
        - Metafield_id
      description: Get all cart metafields.
    post:
      summary: Create multiple Metafields
      tags:
        - Create
        - Multiple
        - Metafields
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
        - Metafield_id
      description: Create multiple metafields.
    put:
      summary: Update multiple Metafields
      tags:
        - Update
        - Multiple
        - Metafields
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
        - Metafield_id
      description: Create multiple metafields.
    delete:
      summary: Delete All Metafields
      tags:
        - Delete
        - All
        - Metafields
        - Carts
        - Id
        - Items
        - Redirect_urls
        - Item
        - Settings
        - Channels
        - Channel_id
        - Cart_id
        - Metafields
        - Metafield_id
      description: Delete all cart
